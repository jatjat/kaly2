group 'ca.joelathiessen.kaly2'
version '0.1'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'ca.joelathiessen.kaly2.server.KalyServer'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url  "https://dl.bintray.com/kotlin/exposed"
    }
}


jar {
    manifest {
        attributes 'Main-Class': 'ca.joelathiessen.kaly2.server.KalyServer'
    }

    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

sourceSets {
    test {
        resources {
            srcDir 'images'
        }
    }
}


configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}


task testJar(type: Jar) {
    classifier = "tests"
    from sourceSets.test.output + sourceSets.test.allSource + sourceSets.test.resources
}

task testFastSLAMView(type: JavaExec) {
    description = "Visualize FastSLAM mapping and localization algorithm"
    dependsOn 'testJar'
    classpath = sourceSets.test.runtimeClasspath
    main = 'ca.joelathiessen.kaly2.tests.pc.acceptance.FastSLAMDemo'
}

task testFeatureDetectorView(type: JavaExec) {
    description = "Visualize split-and-merge feature detection algorithm"
    dependsOn 'testJar'
    classpath = sourceSets.test.runtimeClasspath
    main = 'ca.joelathiessen.kaly2.tests.pc.acceptance.FeatureDetectorDemo'
}

task testMainLoopView(type: JavaExec) {
    description = "Visualize all algorithms working together"
    dependsOn 'testJar'
    classpath = sourceSets.test.runtimeClasspath
    main = 'ca.joelathiessen.kaly2.tests.pc.acceptance.MainLoopDemo'
}

task testRRTStarView(type: JavaExec) {
    description = "Visualize RRT* pathing algorithm"
    dependsOn 'testJar'
    classpath = sourceSets.test.runtimeClasspath
    main = 'ca.joelathiessen.kaly2.tests.pc.acceptance.RRTStarDemo'
}


dependencies {
    implementation 'gov.nist.math:jama:1.0.3'
    implementation files("lib/leJOS_EV3_0.9.1-beta/lib/ev3/ev3classes.jar")
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.github.salomonbrys.kotson:kotson:2.3.0'
    implementation 'com.h2database:h2:1.4.196'
    implementation 'mysql:mysql-connector-java:5.1.6'
    implementation 'org.jetbrains.exposed:exposed:0.8.6'

    String jetty_version = '7.5.4.v20111024'
    implementation "org.eclipse.jetty:jetty-continuation:$jetty_version"
    implementation "org.eclipse.jetty:jetty-http:$jetty_version"
    implementation "org.eclipse.jetty:jetty-io:$jetty_version"
    implementation "org.eclipse.jetty:jetty-security:$jetty_version"
    implementation "org.eclipse.jetty:jetty-server:$jetty_version"
    implementation "org.eclipse.jetty:jetty-servlet:$jetty_version"
    implementation "org.eclipse.jetty:jetty-util:$jetty_version"
    implementation "org.eclipse.jetty:jetty-webapp:$jetty_version"
    implementation "org.eclipse.jetty:jetty-xml:$jetty_version"
    implementation "org.eclipse.jetty:jetty-websocket:$jetty_version"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.9'
    testCompile 'com.nhaarman:mockito-kotlin:1.5.0'

    ktlint "com.github.shyiko:ktlint:0.20.0"
}
